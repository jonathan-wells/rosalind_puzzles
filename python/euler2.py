#!/usr/bin/env python3

"""
Problem 2 - Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

def recursive_fibonacci(n):
    if n <= 2:
        return max(n, 1)
    else:
        return fibonacci(n-2) + fibonacci(n-1)

def dp_fibonacci(n):
    mem = [1, 1, 2]
    if n <= 2:
        return mem[n]
    else:
        while len(mem) <= n:
            mem.append(mem[-1] + mem[-2])
    return mem[-1]

def even_fib(n=4e6):
    a, b = 1, 1
    total = 0
    while b < n:
        if b%2 == 0:
            total += b
        a, b = b, a + b
    return total

if __name__ == '__main__':
    print(even_fib())
